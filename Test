#!/usr/bin/env bash
set -euo pipefail

HARBOR_URL="https://registry.example.com"   # dùng FQDN + https
PROJECT="vlp"                                # đúng tên project (lowercase)
USER="admin"
PASS="******"
PAGE_SIZE=100
INSECURE="-k"   # bỏ nếu cert hợp lệ
CURL="curl -sS -fL $INSECURE -u \"$USER:$PASS\""

urlencode() { jq -rn --arg x "$1" '$x|@uri'; }

echo "repository,latest_tag,pushed_at,digest"

page=1
while :; do
  repos_json=$(eval $CURL "\"$HARBOR_URL/api/v2.0/projects/$PROJECT/repositories?page=$page&page_size=$PAGE_SIZE\"") || {
    echo "ERROR: list repositories failed on page $page" >&2; exit 1; }

  [ "$(jq 'length' <<<"$repos_json")" -eq 0 ] && break

  # tên đầy đủ repo trong project (vd: vlp/nginx, vlp/libs/ubuntu)
  echo "$repos_json" | jq -r '.[].name' | while read -r repo_full; do
    repo_enc=$(urlencode "$repo_full")

    arts_json=$(eval $CURL \
      "\"$HARBOR_URL/api/v2.0/projects/$PROJECT/repositories/$repo_enc/artifacts?with_tag=true&sort=-push_time&page=1&page_size=100\"") || {
      echo "$repo_full,-,-,-"; continue; }

    # Lọc artifact có tags, lấy cái mới nhất theo push_time
    line=$(jq -r '
      [ .[] | select(.tags != null and (.tags|length) > 0) ] as $a
      | if ($a|length)==0 then "" else
          ( ($a | max_by(.push_time)) | [ .tags[0].name, .push_time, .digest ] | @csv )
        end
    ' <<<"$arts_json")

    if [ -z "$line" ] || [ "$line" = "null" ]; then
      echo "$repo_full,-,-,-"
    else
      # @csv cho ra "tag","time","digest" → bỏ ngoặc kép
      echo "$repo_full,$(sed 's/^"\(.*\)"$/\1/' <<<"$line" | tr -d '"')"
    fi
  done

  page=$((page+1))
done
