

Dưới đây là hướng dẫn từng bước để bạn thực hiện điều này, dựa trên thông tin bạn đã cungLED và đặc thù của image osixia/openldap:

Bước 1: Kích hoạt Backend Monitor trong osixia/openldap

Như đã đề cập, osixia/openldap không sử dụng slapd.conf tĩnh. Thay vào đó, chúng ta cần kích hoạt backend monitor thông qua cấu hình động (cn=config), thường là bằng cách cung cấp các file LDIF khởi tạo (bootstrap LDIF files).

Tạo file LDIF để kích hoạt backend monitor:
Tạo một file, ví dụ enable-monitor-backend.ldif, với nội dung sau:

# Load monitor backend module
dn: cn=module{0},cn=config
changetype: modify
add: olcModuleLoad
olcModuleLoad: back_monitor

# Add monitor database
dn: olcDatabase=monitor,cn=config
objectClass: olcDatabaseConfig
objectClass: olcMonitorConfig
olcDatabase: monitor
olcAccess: to *
  by dn.exact="cn=monitoring,cn=Monitor" read
  by * none
olcRootDN: cn=monitoring,cn=Monitor
# Replace YOUR_MONITORING_ROOT_PASSWORD with your desired password
# You can generate a SSHA password using: slappasswd -h {SSHA} -s YOUR_PASSWORD
# Or use a plain text password (less secure, but works for osixia image if not using SSHA format)
olcRootPW: YOUR_MONITORING_ROOT_PASSWORD


Lưu ý quan trọng:

olcRootPW: Bạn cần thay YOUR_MONITORING_ROOT_PASSWORD bằng một mật khẩu thực tế. Image osixia/openldap thường xử lý mật khẩu dạng clear text khi khởi tạo, nhưng nếu bạn muốn bảo mật hơn và tự quản lý việc hash, bạn có thể tạo mật khẩu SSHA bằng lệnh slappasswd -h {SSHA} -s YOUR_PASSWORD và dán giá trị hash đó vào (ví dụ: olcRootPW: {SSHA}xxxxxxxxxxxxxx). Tuy nhiên, để đơn giản cho lần đầu, bạn có thể dùng mật khẩu dạng clear text.

DN cn=monitoring,cn=Monitor: Đây là DN (Distinguished Name) mặc định mà openldap_exporter thường dùng để bind vào backend monitor.

Mount file LDIF này vào container osixia/openldap:
Trong file YAML triển khai (Deployment, StatefulSet, ...) của OpenLDAP trên Kubernetes, bạn cần mount file LDIF này vào thư mục mà image osixia/openldap sẽ tự động nạp khi khởi động. Thư mục đó là /container/service/slapd/assets/config/bootstrap/ldif/custom/.

Tạo ConfigMap từ file LDIF:

kubectl create configmap openldap-monitor-ldif --from-file=enable-monitor-backend.ldif -n <your-openldap-namespace>
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Bash
IGNORE_WHEN_COPYING_END

(Thay <your-openldap-namespace> bằng namespace bạn đang triển khai OpenLDAP)

Mount ConfigMap vào Deployment/StatefulSet của OpenLDAP:
Trong file YAML của OpenLDAP (ví dụ: openldap-deployment.yaml), thêm phần volumeMounts và volumes:

# ... (các phần khác của Deployment/StatefulSet)
spec:
  template:
    spec:
      containers:
      - name: openldap
        image: osixia/openldap:latest # Hoặc phiên bản cụ thể
        # ... (các cấu hình khác, ports, env vars)
        volumeMounts:
        - name: openldap-monitor-config
          mountPath: /container/service/slapd/assets/config/bootstrap/ldif/custom/enable-monitor-backend.ldif
          subPath: enable-monitor-backend.ldif # Quan trọng: mount file cụ thể, không phải cả thư mục
        # ... (các volumeMounts khác nếu có)
      volumes:
      - name: openldap-monitor-config
        configMap:
          name: openldap-monitor-ldif
      # ... (các volumes khác nếu có)
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Yaml
IGNORE_WHEN_COPYING_END

Sau khi áp dụng thay đổi này, pod OpenLDAP sẽ khởi động lại và áp dụng file LDIF, kích hoạt backend monitor.

Bước 2: Triển khai openldap_exporter trên Kubernetes

Tạo file YAML cấu hình cho openldap_exporter (ví dụ: exporter-config.yaml):
Dựa trên ví dụ bạn cung cấp, file này sẽ chứa thông tin đăng nhập vào backend monitor:

---
ldapUser: "cn=monitoring,cn=Monitor"
ldapPass: "YOUR_MONITORING_ROOT_PASSWORD" # Sử dụng cùng mật khẩu bạn đặt ở Bước 1
# (Tùy chọn) Nếu OpenLDAP server của bạn không phải là localhost:389 từ góc nhìn của exporter
# ldapAddr: "your-openldap-service-name.your-namespace.svc.cluster.local:389"
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Yaml
IGNORE_WHEN_COPYING_END

Quan trọng:

ldapPass: Phải khớp với olcRootPW bạn đặt trong file enable-monitor-backend.ldif.

ldapAddr: Nếu openldap_exporter chạy trong cùng một pod với OpenLDAP (sidecar) hoặc trên cùng node, localhost:389 có thể hoạt động. Tuy nhiên, cách tốt nhất là sử dụng tên DNS nội bộ của Service OpenLDAP trong Kubernetes (ví dụ: openldap-service.cattle-system.svc.cluster.local:389 nếu OpenLDAP service của bạn tên là openldap-service và ở namespace cattle-system).

Tạo ConfigMap từ file cấu hình exporter:

kubectl create configmap openldap-exporter-config --from-file=exporter.yaml=exporter-config.yaml -n <your-monitoring-namespace>
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Bash
IGNORE_WHEN_COPYING_END

(Thay <your-monitoring-namespace> bằng namespace bạn muốn triển khai exporter)

Tạo file YAML triển khai (Deployment) cho openldap_exporter (ví dụ: openldap-exporter-deployment.yaml):

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldap-exporter
  namespace: <your-monitoring-namespace> # Namespace bạn muốn triển khai exporter
  labels:
    app: openldap-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openldap-exporter
  template:
    metadata:
      labels:
        app: openldap-exporter
    spec:
      containers:
      - name: openldap-exporter
        image: anerkom/openldap_exporter:v2.2.0 # Hoặc phiên bản mới nhất bạn muốn dùng
        args:
        - "--config=/etc/openldap_exporter/exporter.yaml"
        # (Tùy chọn) Nếu bạn không dùng file config YAML mà muốn dùng biến môi trường:
        # env:
        # - name: LDAP_USER
        #   value: "cn=monitoring,cn=Monitor"
        # - name: LDAP_PASS
        #   value: "YOUR_MONITORING_ROOT_PASSWORD" # Hoặc lấy từ Secret
        # - name: LDAP_ADDR
        #   value: "your-openldap-service-name.your-namespace.svc.cluster.local:389"
        ports:
        - name: metrics
          containerPort: 9330
        volumeMounts:
        - name: exporter-config-volume
          mountPath: /etc/openldap_exporter/exporter.yaml
          subPath: exporter.yaml
      volumes:
      - name: exporter-config-volume
        configMap:
          name: openldap-exporter-config
---
apiVersion: v1
kind: Service
metadata:
  name: openldap-exporter-svc
  namespace: <your-monitoring-namespace> # Namespace của exporter
  labels:
    app: openldap-exporter
  annotations:
    # (Tùy chọn) Thêm annotation để Prometheus tự động khám phá (scrape)
    prometheus.io/scrape: 'true'
    prometheus.io/port:   '9330'
spec:
  selector:
    app: openldap-exporter
  ports:
  - name: metrics
    port: 9330
    targetPort: 9330
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Yaml
IGNORE_WHEN_COPYING_END

Giải thích:

Sử dụng image anerkom/openldap_exporter (hoặc một image exporter khác bạn tin cậy).

Truyền đường dẫn đến file config YAML qua argument --config.

Mount ConfigMap chứa exporter.yaml vào container.

Tạo một Service để Prometheus có thể truy cập endpoint /metrics của exporter.

Áp dụng các file YAML vào Kubernetes:

kubectl apply -f openldap-exporter-deployment.yaml -n <your-monitoring-namespace>
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Bash
IGNORE_WHEN_COPYING_END

Bước 3: Cấu hình Prometheus để scrape metrics từ openldap_exporter

Nếu bạn đã thêm annotation prometheus.io/scrape: 'true' vào Service của exporter, và Prometheus của bạn được cấu hình để tự động khám phá các service có annotation này, thì bạn không cần làm gì thêm.

Nếu không, bạn cần thêm một job scrape mới vào file cấu hình của Prometheus (prometheus.yml):

scrape_configs:
  # ... (các job scrape khác)
  - job_name: 'openldap'
    static_configs:
      - targets: ['openldap-exporter-svc.<your-monitoring-namespace>.svc.cluster.local:9330']
    # Hoặc nếu Prometheus có thể khám phá service trong K8s:
    # kubernetes_sd_configs:
    # - role: service
    # relabel_configs:
    # - source_labels: [__meta_kubernetes_service_label_app]
    #   action: keep
    #   regex: openldap-exporter
    # - source_labels: [__meta_kubernetes_namespace]
    #   action: keep
    #   regex: <your-monitoring-namespace>
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Yaml
IGNORE_WHEN_COPYING_END

Bước 4: Kiểm tra

Kiểm tra log của pod OpenLDAP để xem có lỗi nào khi áp dụng LDIF không.

Kiểm tra log của pod openldap_exporter để xem nó có kết nối thành công đến OpenLDAP và backend monitor không.

Truy cập endpoint metrics của exporter (ví dụ: bằng cách port-forward Service của exporter):

kubectl port-forward svc/openldap-exporter-svc 9330:9330 -n <your-monitoring-namespace>
IGNORE_WHEN_COPYING_START
content_copy
download
Use code with caution.
Bash
IGNORE_WHEN_COPYING_END

Sau đó mở trình duyệt hoặc dùng curl http://localhost:9330/metrics.

Kiểm tra trong giao diện Prometheus xem có metrics từ job openldap không.

Đây là một quy trình khá chi tiết, nhưng nó bao gồm tất cả các bước cần thiết để thiết lập giám sát OpenLDAP với osixia/openldap và openldap_exporter trên Kubernetes. Hãy điều chỉnh các tên namespace, service, và mật khẩu cho phù hợp với môi trường của bạn.
